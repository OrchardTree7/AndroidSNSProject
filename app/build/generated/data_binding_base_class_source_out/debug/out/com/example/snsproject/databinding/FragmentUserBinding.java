// Generated by view binder compiler. Do not edit!
package com.example.snsproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.snsproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentUserBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button accountBtnFollowSignout;

  @NonNull
  public final ImageView accountIvProfile;

  @NonNull
  public final RecyclerView accountRecyclerview;

  @NonNull
  public final TextView accountTvFollowerCount;

  @NonNull
  public final TextView accountTvFollowingCount;

  @NonNull
  public final TextView accountTvPostCount;

  private FragmentUserBinding(@NonNull LinearLayout rootView,
      @NonNull Button accountBtnFollowSignout, @NonNull ImageView accountIvProfile,
      @NonNull RecyclerView accountRecyclerview, @NonNull TextView accountTvFollowerCount,
      @NonNull TextView accountTvFollowingCount, @NonNull TextView accountTvPostCount) {
    this.rootView = rootView;
    this.accountBtnFollowSignout = accountBtnFollowSignout;
    this.accountIvProfile = accountIvProfile;
    this.accountRecyclerview = accountRecyclerview;
    this.accountTvFollowerCount = accountTvFollowerCount;
    this.accountTvFollowingCount = accountTvFollowingCount;
    this.accountTvPostCount = accountTvPostCount;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.account_btn_follow_signout;
      Button accountBtnFollowSignout = ViewBindings.findChildViewById(rootView, id);
      if (accountBtnFollowSignout == null) {
        break missingId;
      }

      id = R.id.account_iv_profile;
      ImageView accountIvProfile = ViewBindings.findChildViewById(rootView, id);
      if (accountIvProfile == null) {
        break missingId;
      }

      id = R.id.account_recyclerview;
      RecyclerView accountRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (accountRecyclerview == null) {
        break missingId;
      }

      id = R.id.account_tv_follower_count;
      TextView accountTvFollowerCount = ViewBindings.findChildViewById(rootView, id);
      if (accountTvFollowerCount == null) {
        break missingId;
      }

      id = R.id.account_tv_following_count;
      TextView accountTvFollowingCount = ViewBindings.findChildViewById(rootView, id);
      if (accountTvFollowingCount == null) {
        break missingId;
      }

      id = R.id.account_tv_post_count;
      TextView accountTvPostCount = ViewBindings.findChildViewById(rootView, id);
      if (accountTvPostCount == null) {
        break missingId;
      }

      return new FragmentUserBinding((LinearLayout) rootView, accountBtnFollowSignout,
          accountIvProfile, accountRecyclerview, accountTvFollowerCount, accountTvFollowingCount,
          accountTvPostCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
