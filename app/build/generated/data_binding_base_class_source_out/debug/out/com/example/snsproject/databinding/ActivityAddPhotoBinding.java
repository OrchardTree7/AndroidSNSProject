// Generated by view binder compiler. Do not edit!
package com.example.snsproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.snsproject.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddPhotoBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button addphotoBtnUpload;

  @NonNull
  public final EditText addphotoEditExplain;

  @NonNull
  public final ImageView addphotoImage;

  @NonNull
  public final TextInputLayout editText;

  @NonNull
  public final Toolbar myToolbar;

  @NonNull
  public final LinearLayout toolbarDivision;

  private ActivityAddPhotoBinding(@NonNull RelativeLayout rootView,
      @NonNull Button addphotoBtnUpload, @NonNull EditText addphotoEditExplain,
      @NonNull ImageView addphotoImage, @NonNull TextInputLayout editText,
      @NonNull Toolbar myToolbar, @NonNull LinearLayout toolbarDivision) {
    this.rootView = rootView;
    this.addphotoBtnUpload = addphotoBtnUpload;
    this.addphotoEditExplain = addphotoEditExplain;
    this.addphotoImage = addphotoImage;
    this.editText = editText;
    this.myToolbar = myToolbar;
    this.toolbarDivision = toolbarDivision;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddPhotoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddPhotoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_photo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddPhotoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addphoto_btn_upload;
      Button addphotoBtnUpload = ViewBindings.findChildViewById(rootView, id);
      if (addphotoBtnUpload == null) {
        break missingId;
      }

      id = R.id.addphoto_edit_explain;
      EditText addphotoEditExplain = ViewBindings.findChildViewById(rootView, id);
      if (addphotoEditExplain == null) {
        break missingId;
      }

      id = R.id.addphoto_image;
      ImageView addphotoImage = ViewBindings.findChildViewById(rootView, id);
      if (addphotoImage == null) {
        break missingId;
      }

      id = R.id.editText;
      TextInputLayout editText = ViewBindings.findChildViewById(rootView, id);
      if (editText == null) {
        break missingId;
      }

      id = R.id.my_toolbar;
      Toolbar myToolbar = ViewBindings.findChildViewById(rootView, id);
      if (myToolbar == null) {
        break missingId;
      }

      id = R.id.toolbar_division;
      LinearLayout toolbarDivision = ViewBindings.findChildViewById(rootView, id);
      if (toolbarDivision == null) {
        break missingId;
      }

      return new ActivityAddPhotoBinding((RelativeLayout) rootView, addphotoBtnUpload,
          addphotoEditExplain, addphotoImage, editText, myToolbar, toolbarDivision);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
